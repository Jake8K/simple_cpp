//
//  ReptilePeople.cpp
//  Assignment3
//
//  Created by Jacob Karcz on 7/18/16.
//  Copyright Â© 2016 Jacob Karcz. All rights reserved.
//

#include "ReptilePeople.hpp"

/*****************************************************************************************
 ** Function: Default Constructor
 ** Description: Creates ReptilePeople with the ReptilePeople's special attributes
 ** Parameters: None
 ** Pre-Conditions: None
 ** Post-Conditions: It's alive!
 ****************************************************************************************/
ReptilePeople::ReptilePeople() {
    this->attackDice = 3;
    this->attackDsides = 6;
    this->defenseDice = 1;
    this->defenseDsides = 6;
    this->armor = 7;
    this->strength = 18;
    
}


/*****************************************************************************************
 ** Function: attack()
 ** Description: This creature's attack function, it rolls the creatures's attack dice and
 *               returns the value of the roll as a "hit." If the dice roll the creature's
 *               lucky roll number, then the creature employs its special attack
 ** Parameters: None
 ** Pre-Conditions: None
 ** Post-Conditions: This creature "hits" it's opponent (functionrturns int hit)
 ****************************************************************************************/
int ReptilePeople::attack() {
    int hit = rollMyDice(attackDice, attackDsides);
    cout << "The reptile people strike with " << hit << " attack points!\n";

    return hit;
}

/*****************************************************************************************
 ** Function: defend(hit)
 ** Description: This creature's defense function, it gets passed its opponents "hit"
 *               value generated by their attack function. The function then rolls its
 *               defense dice and subtracts the resulting value from the "hit" passed.
 *               It then subtracts the value of the creatures armor. This "damage" value
 *               is then subtracted form the creature's strength points to update its
 *               "life-force.
 ** Parameters: an int representing the damage caused by its opponent
 ** Pre-Conditions: this creature is locked in battle with another creature
 ** Post-Conditions: This creature's strength points are updated to reflect the damage
 ****************************************************************************************/
void ReptilePeople::defend(int hit) {
    
    int defense = rollMyDice(defenseDice, defenseDsides);
    int damage = (hit - defense) - armor;
    if (damage < 0)
        damage = 0;
    this->strength -= damage;
    
    if (this->strength < 0)
        this->strength = 0;
    
    if (damage > 0)
        cout << "The reptile people take on " << damage
             << " damage! Their strength is now " << this->strength << "!\n";
    else if (damage <= 0)
        cout << "The reptile people thwarted the attack!\n";
}
